// ------------
// enumerations
// ------------

addEnumeration(make_smart<EnumerationImGuiDataType_>());
addEnumeration(make_smart<EnumerationImGuiHoveredFlags_>());
addEnumeration(make_smart<EnumerationImGuiNavInput_>());
addEnumeration(make_smart<EnumerationImGuiDir_>());
addEnumeration(make_smart<EnumerationImGuiCond_>());
addEnumeration(make_smart<EnumerationImGuiDragDropFlags_>());
addEnumeration(make_smart<EnumerationImGuiColorEditFlags_>());
addEnumeration(make_smart<EnumerationImGuiWindowFlags_>());
addEnumeration(make_smart<EnumerationImGuiCol_>());
addEnumeration(make_smart<EnumerationImGuiTableFlags_>());
addEnumeration(make_smart<EnumerationImGuiKeyModFlags_>());
addEnumeration(make_smart<EnumerationImGuiFocusedFlags_>());
addEnumeration(make_smart<EnumerationImGuiMouseCursor_>());
addEnumeration(make_smart<EnumerationImDrawCornerFlags_>());
addEnumeration(make_smart<EnumerationImGuiTableBgTarget_>());
addEnumeration(make_smart<EnumerationImGuiButtonFlags_>());
addEnumeration(make_smart<EnumerationImGuiMouseButton_>());
addEnumeration(make_smart<EnumerationImGuiTabBarFlags_>());
addEnumeration(make_smart<EnumerationImGuiTreeNodeFlags_>());
addEnumeration(make_smart<EnumerationImGuiTabItemFlags_>());
addEnumeration(make_smart<EnumerationImDrawListFlags_>());
addEnumeration(make_smart<EnumerationImGuiSelectableFlags_>());
addEnumeration(make_smart<EnumerationImGuiTableColumnFlags_>());
addEnumeration(make_smart<EnumerationImGuiSortDirection_>());
addEnumeration(make_smart<EnumerationImGuiInputTextFlags_>());
addEnumeration(make_smart<EnumerationImGuiBackendFlags_>());
addEnumeration(make_smart<EnumerationImGuiPopupFlags_>());
addEnumeration(make_smart<EnumerationImGuiComboFlags_>());
addEnumeration(make_smart<EnumerationImGuiKey_>());
addEnumeration(make_smart<EnumerationImGuiStyleVar_>());
addEnumeration(make_smart<EnumerationImGuiConfigFlags_>());
addEnumeration(make_smart<EnumerationImGuiSliderFlags_>());
addEnumeration(make_smart<EnumerationImGuiTableRowFlags_>());
addEnumeration(make_smart<EnumerationImFontAtlasFlags_>());

// ------------
// structures
// ------------

auto ann_ImColor = make_smart<ImColor_GeneratedAnnotation>(lib);
addAnnotation(ann_ImColor);
auto ann_ImDrawChannel = make_smart<ImDrawChannel_GeneratedAnnotation>(lib);
addAnnotation(ann_ImDrawChannel);
auto ann_ImDrawListSplitter = make_smart<ImDrawListSplitter_GeneratedAnnotation>(lib);
addAnnotation(ann_ImDrawListSplitter);
auto ann_ImDrawList = make_smart<ImDrawList_GeneratedAnnotation>(lib);
addAnnotation(ann_ImDrawList);
auto ann_ImDrawData = make_smart<ImDrawData_GeneratedAnnotation>(lib);
addAnnotation(ann_ImDrawData);
auto ann_ImFontGlyphRangesBuilder = make_smart<ImFontGlyphRangesBuilder_GeneratedAnnotation>(lib);
addAnnotation(ann_ImFontGlyphRangesBuilder);
auto ann_ImGuiPayload = make_smart<ImGuiPayload_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiPayload);
auto ann_ImGuiStoragePair = make_smart<ImGuiStoragePair_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiStoragePair);
auto ann_ImFontConfig = make_smart<ImFontConfig_GeneratedAnnotation>(lib);
addAnnotation(ann_ImFontConfig);
auto ann_ImFont = make_smart<ImFont_GeneratedAnnotation>(lib);
addAnnotation(ann_ImFont);
auto ann_ImGuiIO = make_smart<ImGuiIO_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiIO);
auto ann_ImNewWrapper = make_smart<ImNewWrapper_GeneratedAnnotation>(lib);
addAnnotation(ann_ImNewWrapper);
auto ann_ImGuiTableSortSpecs = make_smart<ImGuiTableSortSpecs_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiTableSortSpecs);
auto ann_ImDrawVert = make_smart<ImDrawVert_GeneratedAnnotation>(lib);
addAnnotation(ann_ImDrawVert);
auto ann_ImDrawCmdHeader = make_smart<ImDrawCmdHeader_GeneratedAnnotation>(lib);
addAnnotation(ann_ImDrawCmdHeader);
auto ann_ImFontGlyph = make_smart<ImFontGlyph_GeneratedAnnotation>(lib);
addAnnotation(ann_ImFontGlyph);
auto ann_ImGuiOnceUponAFrame = make_smart<ImGuiOnceUponAFrame_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiOnceUponAFrame);
auto ann_ImFontAtlas = make_smart<ImFontAtlas_GeneratedAnnotation>(lib);
addAnnotation(ann_ImFontAtlas);
auto ann_ImGuiTextFilter = make_smart<ImGuiTextFilter_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiTextFilter);
auto ann_ImGuiSizeCallbackData = make_smart<ImGuiSizeCallbackData_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiSizeCallbackData);
auto ann_ImGuiListClipper = make_smart<ImGuiListClipper_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiListClipper);
auto ann_ImVec2 = make_smart<ImVec2_GeneratedAnnotation>(lib);
addAnnotation(ann_ImVec2);
auto ann_ImGuiTextBuffer = make_smart<ImGuiTextBuffer_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiTextBuffer);
auto ann_ImVec4 = make_smart<ImVec4_GeneratedAnnotation>(lib);
addAnnotation(ann_ImVec4);
auto ann_ImGuiInputTextCallbackData = make_smart<ImGuiInputTextCallbackData_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiInputTextCallbackData);
auto ann_ImDrawCmd = make_smart<ImDrawCmd_GeneratedAnnotation>(lib);
addAnnotation(ann_ImDrawCmd);
auto ann_ImFontAtlasCustomRect = make_smart<ImFontAtlasCustomRect_GeneratedAnnotation>(lib);
addAnnotation(ann_ImFontAtlasCustomRect);
auto ann_ImGuiStyle = make_smart<ImGuiStyle_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiStyle);
auto ann_ImGuiStorage = make_smart<ImGuiStorage_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiStorage);
auto ann_ImGuiTextRange = make_smart<ImGuiTextRange_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiTextRange);
auto ann_ImGuiTableColumnSortSpecs = make_smart<ImGuiTableColumnSortSpecs_GeneratedAnnotation>(lib);
addAnnotation(ann_ImGuiTableColumnSortSpecs);
initRecAnnotation(ann_ImColor,lib);
initRecAnnotation(ann_ImDrawChannel,lib);
initRecAnnotation(ann_ImDrawListSplitter,lib);
initRecAnnotation(ann_ImDrawList,lib);
initRecAnnotation(ann_ImDrawData,lib);
initRecAnnotation(ann_ImFontGlyphRangesBuilder,lib);
initRecAnnotation(ann_ImGuiPayload,lib);
initRecAnnotation(ann_ImGuiStoragePair,lib);
initRecAnnotation(ann_ImFontConfig,lib);
initRecAnnotation(ann_ImFont,lib);
initRecAnnotation(ann_ImGuiIO,lib);
initRecAnnotation(ann_ImNewWrapper,lib);
initRecAnnotation(ann_ImGuiTableSortSpecs,lib);
initRecAnnotation(ann_ImDrawVert,lib);
initRecAnnotation(ann_ImDrawCmdHeader,lib);
initRecAnnotation(ann_ImFontGlyph,lib);
initRecAnnotation(ann_ImGuiOnceUponAFrame,lib);
initRecAnnotation(ann_ImFontAtlas,lib);
initRecAnnotation(ann_ImGuiTextFilter,lib);
initRecAnnotation(ann_ImGuiSizeCallbackData,lib);
initRecAnnotation(ann_ImGuiListClipper,lib);
initRecAnnotation(ann_ImVec2,lib);
initRecAnnotation(ann_ImGuiTextBuffer,lib);
initRecAnnotation(ann_ImVec4,lib);
initRecAnnotation(ann_ImGuiInputTextCallbackData,lib);
initRecAnnotation(ann_ImDrawCmd,lib);
initRecAnnotation(ann_ImFontAtlasCustomRect,lib);
initRecAnnotation(ann_ImGuiStyle,lib);
initRecAnnotation(ann_ImGuiStorage,lib);
initRecAnnotation(ann_ImGuiTextRange,lib);
initRecAnnotation(ann_ImGuiTableColumnSortSpecs,lib);

// ------------
// functions
// ------------

addExtern<DAS_BIND_FUN(ImGui::MemAlloc)>(*this, lib, "MemAlloc",SideEffects::worstDefault, "ImGui::MemAlloc");
addExtern<DAS_BIND_FUN(ImGui::GetDrawListSharedData)>(*this, lib, "GetDrawListSharedData",SideEffects::worstDefault, "ImGui::GetDrawListSharedData");
addExtern<DAS_BIND_FUN(ImGui::ListBoxFooter)>(*this, lib, "ListBoxFooter",SideEffects::worstDefault, "ImGui::ListBoxFooter");
addExtern<DAS_BIND_FUN(ImGui::BeginPopup)>(*this, lib, "BeginPopup",SideEffects::worstDefault, "ImGui::BeginPopup");
addExtern<DAS_BIND_FUN(ImGui::EndDragDropTarget)>(*this, lib, "EndDragDropTarget",SideEffects::worstDefault, "ImGui::EndDragDropTarget");
addExtern<DAS_BIND_FUN(ImGui::GetFrameCount)>(*this, lib, "GetFrameCount",SideEffects::worstDefault, "ImGui::GetFrameCount");
addExtern<DAS_BIND_FUN(ImGui::IsItemActivated)>(*this, lib, "IsItemActivated",SideEffects::worstDefault, "ImGui::IsItemActivated");
addExtern<DAS_BIND_FUN(ImGui::BeginPopupModal)>(*this, lib, "BeginPopupModal",SideEffects::worstDefault, "ImGui::BeginPopupModal");
addExtern<DAS_BIND_FUN(ImGui::SetKeyboardFocusHere)>(*this, lib, "SetKeyboardFocusHere",SideEffects::worstDefault, "ImGui::SetKeyboardFocusHere");
addExtern<bool (*)(const char *, ImGuiDataType, void *, int, const void *, const void *, const char *, ImGuiSliderFlags),ImGui::SliderScalarN>(*this, lib, "SliderScalarN",SideEffects::worstDefault, "ImGui::SliderScalarN");
addExtern<DAS_BIND_FUN(ImGui::ShowStyleSelector)>(*this, lib, "ShowStyleSelector",SideEffects::worstDefault, "ImGui::ShowStyleSelector");
addExtern<DAS_BIND_FUN(ImGui::GetWindowContentRegionWidth)>(*this, lib, "GetWindowContentRegionWidth",SideEffects::worstDefault, "ImGui::GetWindowContentRegionWidth");
addExtern<DAS_BIND_FUN(ImGui::TableGetColumnFlags)>(*this, lib, "TableGetColumnFlags",SideEffects::worstDefault, "ImGui::TableGetColumnFlags");
addExtern<DAS_BIND_FUN(ImGui::ColorPicker3)>(*this, lib, "ColorPicker3",SideEffects::worstDefault, "ImGui::ColorPicker3");
addExtern<DAS_BIND_FUN(ImGui::EndPopup)>(*this, lib, "EndPopup",SideEffects::worstDefault, "ImGui::EndPopup");
addExtern<DAS_BIND_FUN(ImGui::IsItemHovered)>(*this, lib, "IsItemHovered",SideEffects::worstDefault, "ImGui::IsItemHovered");
addExtern<DAS_BIND_FUN(ImGui::InputScalar)>(*this, lib, "InputScalar",SideEffects::worstDefault, "ImGui::InputScalar");
addExtern<DAS_BIND_FUN(ImGui::GetForegroundDrawList)>(*this, lib, "GetForegroundDrawList",SideEffects::worstDefault, "ImGui::GetForegroundDrawList");
addExtern<bool (*)(const char *, bool *, ImGuiTreeNodeFlags),ImGui::CollapsingHeader>(*this, lib, "CollapsingHeader",SideEffects::worstDefault, "ImGui::CollapsingHeader");
addExtern<DAS_BIND_FUN(ImGui::GetStyleColorName)>(*this, lib, "GetStyleColorName",SideEffects::worstDefault, "ImGui::GetStyleColorName");
addExtern<DAS_BIND_FUN(ImGui::CaptureKeyboardFromApp)>(*this, lib, "CaptureKeyboardFromApp",SideEffects::worstDefault, "ImGui::CaptureKeyboardFromApp");
addExtern<DAS_BIND_FUN(ImGui::CaptureMouseFromApp)>(*this, lib, "CaptureMouseFromApp",SideEffects::worstDefault, "ImGui::CaptureMouseFromApp");
addExtern<bool (*)(const char *, ImGuiDataType, void *, const void *, const void *, const char *, float),ImGui::SliderScalar>(*this, lib, "SliderScalar",SideEffects::worstDefault, "ImGui::SliderScalar");
addExtern<DAS_BIND_FUN(ImGui::GetContentRegionAvailWidth)>(*this, lib, "GetContentRegionAvailWidth",SideEffects::worstDefault, "ImGui::GetContentRegionAvailWidth");
addExtern<DAS_BIND_FUN(ImGui::SetScrollFromPosX)>(*this, lib, "SetScrollFromPosX",SideEffects::worstDefault, "ImGui::SetScrollFromPosX");
addExtern<DAS_BIND_FUN(ImGui::OpenPopup)>(*this, lib, "OpenPopup",SideEffects::worstDefault, "ImGui::OpenPopup");
addExtern<DAS_BIND_FUN(ImGui::NewFrame)>(*this, lib, "NewFrame",SideEffects::worstDefault, "ImGui::NewFrame");
addExtern<DAS_BIND_FUN(ImGui::GetScrollX)>(*this, lib, "GetScrollX",SideEffects::worstDefault, "ImGui::GetScrollX");
addExtern<DAS_BIND_FUN(ImGui::SetNextWindowFocus)>(*this, lib, "SetNextWindowFocus",SideEffects::worstDefault, "ImGui::SetNextWindowFocus");
addExtern<DAS_BIND_FUN(ImGui::DragInt)>(*this, lib, "DragInt",SideEffects::worstDefault, "ImGui::DragInt");
addExtern<DAS_BIND_FUN(ImGui::DestroyContext)>(*this, lib, "DestroyContext",SideEffects::worstDefault, "ImGui::DestroyContext");
addExtern<DAS_BIND_FUN(ImGui::Checkbox)>(*this, lib, "Checkbox",SideEffects::worstDefault, "ImGui::Checkbox");
addExtern<DAS_BIND_FUN(ImGui::GetClipboardText)>(*this, lib, "GetClipboardText",SideEffects::worstDefault, "ImGui::GetClipboardText");
addExtern<DAS_BIND_FUN(ImGui::GetDrawData)>(*this, lib, "GetDrawData",SideEffects::worstDefault, "ImGui::GetDrawData");
addExtern<DAS_BIND_FUN(ImGui::SetNextItemOpen)>(*this, lib, "SetNextItemOpen",SideEffects::worstDefault, "ImGui::SetNextItemOpen");
addExtern<DAS_BIND_FUN(ImGui::IsItemClicked)>(*this, lib, "IsItemClicked",SideEffects::worstDefault, "ImGui::IsItemClicked");
addExtern<bool (*)(const char *, const char *, va_list),ImGui::TreeNodeV>(*this, lib, "TreeNodeV",SideEffects::worstDefault, "ImGui::TreeNodeV");
addExtern<DAS_BIND_FUN(ImGui::SetItemDefaultFocus)>(*this, lib, "SetItemDefaultFocus",SideEffects::worstDefault, "ImGui::SetItemDefaultFocus");
addExtern<DAS_BIND_FUN(ImGui::IsAnyItemActive)>(*this, lib, "IsAnyItemActive",SideEffects::worstDefault, "ImGui::IsAnyItemActive");
addExtern<void (*)(const char *),ImGui::SetWindowFocus>(*this, lib, "SetWindowFocus",SideEffects::worstDefault, "ImGui::SetWindowFocus");
addExtern<DAS_BIND_FUN(ImGui::InputInt4)>(*this, lib, "InputInt4",SideEffects::worstDefault, "ImGui::InputInt4");
addExtern<DAS_BIND_FUN(ImGui::InvisibleButton)>(*this, lib, "InvisibleButton",SideEffects::worstDefault, "ImGui::InvisibleButton");
addExtern<DAS_BIND_FUN(ImGui::CreateContext)>(*this, lib, "CreateContext",SideEffects::worstDefault, "ImGui::CreateContext");
addExtern<DAS_BIND_FUN(ImGui::Unindent)>(*this, lib, "Unindent",SideEffects::worstDefault, "ImGui::Unindent");
addExtern<bool (*)(const char *, int, int),ImGui::ListBoxHeader>(*this, lib, "ListBoxHeader",SideEffects::worstDefault, "ImGui::ListBoxHeader");
addExtern<DAS_BIND_FUN(ImGui::TableSetupScrollFreeze)>(*this, lib, "TableSetupScrollFreeze",SideEffects::worstDefault, "ImGui::TableSetupScrollFreeze");
addExtern<DAS_BIND_FUN(ImGui::IsItemDeactivatedAfterEdit)>(*this, lib, "IsItemDeactivatedAfterEdit",SideEffects::worstDefault, "ImGui::IsItemDeactivatedAfterEdit");
addExtern<bool (*)(const char *, float *, float, float, const char *, float),ImGui::SliderFloat2>(*this, lib, "SliderFloat2",SideEffects::worstDefault, "ImGui::SliderFloat2");
addExtern<DAS_BIND_FUN(ImGui::ShowStyleEditor)>(*this, lib, "ShowStyleEditor",SideEffects::worstDefault, "ImGui::ShowStyleEditor");
addExtern<DAS_BIND_FUN(ImGui::SetCursorScreenPos)>(*this, lib, "SetCursorScreenPos",SideEffects::worstDefault, "ImGui::SetCursorScreenPos");
addExtern<DAS_BIND_FUN(ImGui::OpenPopupContextItem)>(*this, lib, "OpenPopupContextItem",SideEffects::worstDefault, "ImGui::OpenPopupContextItem");
addExtern<void (*)(ImGuiStyleVar, float),ImGui::PushStyleVar>(*this, lib, "PushStyleVar",SideEffects::worstDefault, "ImGui::PushStyleVar");
addExtern<DAS_BIND_FUN(ImGui::EndTable)>(*this, lib, "EndTable",SideEffects::worstDefault, "ImGui::EndTable");
addExtern<DAS_BIND_FUN(ImGui::TableHeader)>(*this, lib, "TableHeader",SideEffects::worstDefault, "ImGui::TableHeader");
addExtern<DAS_BIND_FUN(ImGui::LogToTTY)>(*this, lib, "LogToTTY",SideEffects::worstDefault, "ImGui::LogToTTY");
addExtern<DAS_BIND_FUN(ImGui::GetTreeNodeToLabelSpacing)>(*this, lib, "GetTreeNodeToLabelSpacing",SideEffects::worstDefault, "ImGui::GetTreeNodeToLabelSpacing");
addExtern<bool (*)(const char *, const char *, bool *, bool),ImGui::MenuItem>(*this, lib, "MenuItem",SideEffects::worstDefault, "ImGui::MenuItem");
addExtern<DAS_BIND_FUN(ImGui::GetWindowHeight)>(*this, lib, "GetWindowHeight",SideEffects::worstDefault, "ImGui::GetWindowHeight");
addExtern<DAS_BIND_FUN(ImGui::SetWindowFontScale)>(*this, lib, "SetWindowFontScale",SideEffects::worstDefault, "ImGui::SetWindowFontScale");
addExtern<DAS_BIND_FUN(ImGui::SetScrollFromPosY)>(*this, lib, "SetScrollFromPosY",SideEffects::worstDefault, "ImGui::SetScrollFromPosY");
addExtern<bool (*)(const char *, float *, float, float, float, const char *, float),ImGui::DragFloat2>(*this, lib, "DragFloat2",SideEffects::worstDefault, "ImGui::DragFloat2");
addExtern<void (*)(const char *, int),ImGui::Value>(*this, lib, "Value",SideEffects::worstDefault, "ImGui::Value");
addExtern<bool (*)(const char *, int *, int),ImGui::RadioButton>(*this, lib, "RadioButton",SideEffects::worstDefault, "ImGui::RadioButton");
addExtern<DAS_BIND_FUN(ImGui::SetColorEditOptions)>(*this, lib, "SetColorEditOptions",SideEffects::worstDefault, "ImGui::SetColorEditOptions");
addExtern<DAS_BIND_FUN(ImGui::ShowFontSelector)>(*this, lib, "ShowFontSelector",SideEffects::worstDefault, "ImGui::ShowFontSelector");
addExtern<DAS_BIND_FUN(ImGui::GetWindowSize), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetWindowSize",SideEffects::worstDefault, "ImGui::GetWindowSize");
addExtern<DAS_BIND_FUN(ImGui::SmallButton)>(*this, lib, "SmallButton",SideEffects::worstDefault, "ImGui::SmallButton");
addExtern<DAS_BIND_FUN(ImGui::GetMouseCursor)>(*this, lib, "GetMouseCursor",SideEffects::worstDefault, "ImGui::GetMouseCursor");
addExtern<bool (*)(const char *, const char *, bool, bool),ImGui::MenuItem>(*this, lib, "MenuItem",SideEffects::worstDefault, "ImGui::MenuItem");
addExtern<DAS_BIND_FUN(ImGui::PopFont)>(*this, lib, "PopFont",SideEffects::worstDefault, "ImGui::PopFont");
addExtern<DAS_BIND_FUN(ImGui::ColorConvertRGBtoHSV)>(*this, lib, "ColorConvertRGBtoHSV",SideEffects::worstDefault, "ImGui::ColorConvertRGBtoHSV");
addExtern<DAS_BIND_FUN(ImGui::SetNextItemWidth)>(*this, lib, "SetNextItemWidth",SideEffects::worstDefault, "ImGui::SetNextItemWidth");
addExtern<DAS_BIND_FUN(ImGui::GetItemRectMin), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetItemRectMin",SideEffects::worstDefault, "ImGui::GetItemRectMin");
addExtern<DAS_BIND_FUN(ImGui::SetColumnOffset)>(*this, lib, "SetColumnOffset",SideEffects::worstDefault, "ImGui::SetColumnOffset");
addExtern<DAS_BIND_FUN(ImGui::IsKeyPressed)>(*this, lib, "IsKeyPressed",SideEffects::worstDefault, "ImGui::IsKeyPressed");
addExtern<DAS_BIND_FUN(ImGui::IsKeyDown)>(*this, lib, "IsKeyDown",SideEffects::worstDefault, "ImGui::IsKeyDown");
addExtern<void (*)(ImGuiStyleVar, const ImVec2 &),ImGui::PushStyleVar>(*this, lib, "PushStyleVar",SideEffects::worstDefault, "ImGui::PushStyleVar");
addExtern<DAS_BIND_FUN(ImGui::IsMouseReleased)>(*this, lib, "IsMouseReleased",SideEffects::worstDefault, "ImGui::IsMouseReleased");
addExtern<DAS_BIND_FUN(ImGui::BeginMenuBar)>(*this, lib, "BeginMenuBar",SideEffects::worstDefault, "ImGui::BeginMenuBar");
addExtern<DAS_BIND_FUN(ImGui::GetCursorStartPos), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetCursorStartPos",SideEffects::worstDefault, "ImGui::GetCursorStartPos");
addExtern<DAS_BIND_FUN(ImGui::PushTextWrapPos)>(*this, lib, "PushTextWrapPos",SideEffects::worstDefault, "ImGui::PushTextWrapPos");
addExtern<DAS_BIND_FUN(ImGui::GetColumnIndex)>(*this, lib, "GetColumnIndex",SideEffects::worstDefault, "ImGui::GetColumnIndex");
addExtern<DAS_BIND_FUN(ImGui::SetScrollX)>(*this, lib, "SetScrollX",SideEffects::worstDefault, "ImGui::SetScrollX");
addExtern<bool (*)(const void *, ImGuiTreeNodeFlags, const char *, va_list),ImGui::TreeNodeExV>(*this, lib, "TreeNodeExV",SideEffects::worstDefault, "ImGui::TreeNodeExV");
addExtern<void (*)(const char *, const float *, int, int, const char *, float, float, ImVec2, int),ImGui::PlotHistogram>(*this, lib, "PlotHistogram",SideEffects::worstDefault, "ImGui::PlotHistogram");
addExtern<void (*)(int),ImGui::PushID>(*this, lib, "PushID",SideEffects::worstDefault, "ImGui::PushID");
addExtern<DAS_BIND_FUN(ImGui::LogToFile)>(*this, lib, "LogToFile",SideEffects::worstDefault, "ImGui::LogToFile");
addExtern<DAS_BIND_FUN(ImGui::PushAllowKeyboardFocus)>(*this, lib, "PushAllowKeyboardFocus",SideEffects::worstDefault, "ImGui::PushAllowKeyboardFocus");
addExtern<void (*)(const void *),ImGui::TreePush>(*this, lib, "TreePush",SideEffects::worstDefault, "ImGui::TreePush");
addExtern<DAS_BIND_FUN(ImGui::SetNextWindowPos)>(*this, lib, "SetNextWindowPos",SideEffects::worstDefault, "ImGui::SetNextWindowPos");
addExtern<DAS_BIND_FUN(ImGui::InputFloat3)>(*this, lib, "InputFloat3",SideEffects::worstDefault, "ImGui::InputFloat3");
addExtern<bool (*)(const char *, ImGuiMouseButton, bool),ImGui::BeginPopupContextWindow>(*this, lib, "BeginPopupContextWindow",SideEffects::worstDefault, "ImGui::BeginPopupContextWindow");
addExtern<DAS_BIND_FUN(ImGui::BeginDragDropSource)>(*this, lib, "BeginDragDropSource",SideEffects::worstDefault, "ImGui::BeginDragDropSource");
addExtern<DAS_BIND_FUN(ImGui::GetTime)>(*this, lib, "GetTime",SideEffects::worstDefault, "ImGui::GetTime");
addExtern<bool (*)(const char *, int *, bool (*)(void *, int, const char **), void *, int, int),ImGui::Combo>(*this, lib, "Combo",SideEffects::worstDefault, "ImGui::Combo");
addExtern<DAS_BIND_FUN(ImGui::IsWindowCollapsed)>(*this, lib, "IsWindowCollapsed",SideEffects::worstDefault, "ImGui::IsWindowCollapsed");
addExtern<DAS_BIND_FUN(ImGui::VSliderScalar)>(*this, lib, "VSliderScalar",SideEffects::worstDefault, "ImGui::VSliderScalar");
addExtern<DAS_BIND_FUN(ImGui::Render)>(*this, lib, "Render",SideEffects::worstDefault, "ImGui::Render");
addExtern<void (*)(ImGuiCol, const ImVec4 &),ImGui::PushStyleColor>(*this, lib, "PushStyleColor",SideEffects::worstDefault, "ImGui::PushStyleColor");
addExtern<DAS_BIND_FUN(ImGui::EndFrame)>(*this, lib, "EndFrame",SideEffects::worstDefault, "ImGui::EndFrame");
addExtern<DAS_BIND_FUN(ImGui::PopStyleColor)>(*this, lib, "PopStyleColor",SideEffects::worstDefault, "ImGui::PopStyleColor");
addExtern<bool (*)(const char *, ImGuiDataType, void *, float, const void *, const void *, const char *, ImGuiSliderFlags),ImGui::DragScalar>(*this, lib, "DragScalar",SideEffects::worstDefault, "ImGui::DragScalar");
addExtern<DAS_BIND_FUN(ImGui::SliderInt2)>(*this, lib, "SliderInt2",SideEffects::worstDefault, "ImGui::SliderInt2");
addExtern<DAS_BIND_FUN(ImGui::TreeAdvanceToLabelPos)>(*this, lib, "TreeAdvanceToLabelPos",SideEffects::worstDefault, "ImGui::TreeAdvanceToLabelPos");
addExtern<bool (*)(const char *, int *, int),ImGui::CheckboxFlags>(*this, lib, "CheckboxFlags",SideEffects::worstDefault, "ImGui::CheckboxFlags");
addExtern<bool (*)(const char *, unsigned int *, unsigned int),ImGui::CheckboxFlags>(*this, lib, "CheckboxFlags",SideEffects::worstDefault, "ImGui::CheckboxFlags");
addExtern<DAS_BIND_FUN(ImGui::BeginMenu)>(*this, lib, "BeginMenu",SideEffects::worstDefault, "ImGui::BeginMenu");
addExtern<bool (*)(const char *, float *, float, float, float, const char *, float),ImGui::DragFloat>(*this, lib, "DragFloat",SideEffects::worstDefault, "ImGui::DragFloat");
addExtern<ImU32 (*)(const ImVec4 &),ImGui::GetColorU32>(*this, lib, "GetColorU32",SideEffects::worstDefault, "ImGui::GetColorU32");
addExtern<DAS_BIND_FUN(ImGui::SetScrollHereY)>(*this, lib, "SetScrollHereY",SideEffects::worstDefault, "ImGui::SetScrollHereY");
addExtern<DAS_BIND_FUN(ImGui::TableSetColumnIndex)>(*this, lib, "TableSetColumnIndex",SideEffects::worstDefault, "ImGui::TableSetColumnIndex");
addExtern<DAS_BIND_FUN(ImGui::ColorButton)>(*this, lib, "ColorButton",SideEffects::worstDefault, "ImGui::ColorButton");
addExtern<DAS_BIND_FUN(ImGui::GetScrollMaxY)>(*this, lib, "GetScrollMaxY",SideEffects::worstDefault, "ImGui::GetScrollMaxY");
addExtern<bool (*)(const char *, float *, float, float, float, const char *, ImGuiSliderFlags),ImGui::DragFloat3>(*this, lib, "DragFloat3",SideEffects::worstDefault, "ImGui::DragFloat3");
addExtern<DAS_BIND_FUN(ImGui::GetScrollMaxX)>(*this, lib, "GetScrollMaxX",SideEffects::worstDefault, "ImGui::GetScrollMaxX");
addExtern<DAS_BIND_FUN(ImGui::EndChildFrame)>(*this, lib, "EndChildFrame",SideEffects::worstDefault, "ImGui::EndChildFrame");
addExtern<DAS_BIND_FUN(ImGui::ShowAboutWindow)>(*this, lib, "ShowAboutWindow",SideEffects::worstDefault, "ImGui::ShowAboutWindow");
addExtern<DAS_BIND_FUN(ImGui::GetKeyIndex)>(*this, lib, "GetKeyIndex",SideEffects::worstDefault, "ImGui::GetKeyIndex");
addExtern<DAS_BIND_FUN(ImGui::Spacing)>(*this, lib, "Spacing",SideEffects::worstDefault, "ImGui::Spacing");
addExtern<DAS_BIND_FUN(ImGui::SetColumnWidth)>(*this, lib, "SetColumnWidth",SideEffects::worstDefault, "ImGui::SetColumnWidth");
addExtern<DAS_BIND_FUN(ImGui::ColorConvertU32ToFloat4), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "ColorConvertU32ToFloat4",SideEffects::worstDefault, "ImGui::ColorConvertU32ToFloat4");
addExtern<DAS_BIND_FUN(ImGui::IsAnyMouseDown)>(*this, lib, "IsAnyMouseDown",SideEffects::worstDefault, "ImGui::IsAnyMouseDown");
addExtern<DAS_BIND_FUN(ImGui::CalcItemWidth)>(*this, lib, "CalcItemWidth",SideEffects::worstDefault, "ImGui::CalcItemWidth");
addExtern<void (*)(const char *, const float *, int, int, const char *, float, float, ImVec2, int),ImGui::PlotLines>(*this, lib, "PlotLines",SideEffects::worstDefault, "ImGui::PlotLines");
addExtern<void (*)(const char *, unsigned int),ImGui::Value>(*this, lib, "Value",SideEffects::worstDefault, "ImGui::Value");
addExtern<DAS_BIND_FUN(ImGui::SliderAngle)>(*this, lib, "SliderAngle",SideEffects::worstDefault, "ImGui::SliderAngle");
addExtern<DAS_BIND_FUN(ImGui::LogButtons)>(*this, lib, "LogButtons",SideEffects::worstDefault, "ImGui::LogButtons");
addExtern<DAS_BIND_FUN(ImGui::GetCursorPosX)>(*this, lib, "GetCursorPosX",SideEffects::worstDefault, "ImGui::GetCursorPosX");
addExtern<DAS_BIND_FUN(ImGui::TabItemButton)>(*this, lib, "TabItemButton",SideEffects::worstDefault, "ImGui::TabItemButton");
addExtern<DAS_BIND_FUN(ImGui::EndTooltip)>(*this, lib, "EndTooltip",SideEffects::worstDefault, "ImGui::EndTooltip");
addExtern<bool (*)(const ImVec2 &),ImGui::IsRectVisible>(*this, lib, "IsRectVisible",SideEffects::worstDefault, "ImGui::IsRectVisible");
addExtern<DAS_BIND_FUN(ImGui::CalcTextSize), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "CalcTextSize",SideEffects::worstDefault, "ImGui::CalcTextSize");
addExtern<bool (*)(const char *, float *, float, float, float, const char *, float),ImGui::DragFloat3>(*this, lib, "DragFloat3",SideEffects::worstDefault, "ImGui::DragFloat3");
addExtern<DAS_BIND_FUN(ImGui::SameLine)>(*this, lib, "SameLine",SideEffects::worstDefault, "ImGui::SameLine");
addExtern<DAS_BIND_FUN(ImGui::Dummy)>(*this, lib, "Dummy",SideEffects::worstDefault, "ImGui::Dummy");
addExtern<DAS_BIND_FUN(ImGui::BeginGroup)>(*this, lib, "BeginGroup",SideEffects::worstDefault, "ImGui::BeginGroup");
addExtern<DAS_BIND_FUN(ImGui::BeginTabBar)>(*this, lib, "BeginTabBar",SideEffects::worstDefault, "ImGui::BeginTabBar");
addExtern<DAS_BIND_FUN(ImGui::GetKeyPressedAmount)>(*this, lib, "GetKeyPressedAmount",SideEffects::worstDefault, "ImGui::GetKeyPressedAmount");
addExtern<DAS_BIND_FUN(ImGui::TextV)>(*this, lib, "TextV",SideEffects::worstDefault, "ImGui::TextV");
addExtern<DAS_BIND_FUN(ImGui::BeginMainMenuBar)>(*this, lib, "BeginMainMenuBar",SideEffects::worstDefault, "ImGui::BeginMainMenuBar");
addExtern<DAS_BIND_FUN(ImGui::SetStateStorage)>(*this, lib, "SetStateStorage",SideEffects::worstDefault, "ImGui::SetStateStorage");
addExtern<DAS_BIND_FUN(ImGui::SliderInt4)>(*this, lib, "SliderInt4",SideEffects::worstDefault, "ImGui::SliderInt4");
addExtern<bool (*)(const char *, ImGuiDataType, void *, int, float, const void *, const void *, const char *, float),ImGui::DragScalarN>(*this, lib, "DragScalarN",SideEffects::worstDefault, "ImGui::DragScalarN");
addExtern<DAS_BIND_FUN(ImGui::LabelTextV)>(*this, lib, "LabelTextV",SideEffects::worstDefault, "ImGui::LabelTextV");
addExtern<ImU32 (*)(ImGuiCol, float),ImGui::GetColorU32>(*this, lib, "GetColorU32",SideEffects::worstDefault, "ImGui::GetColorU32");
addExtern<DAS_BIND_FUN(ImGui::ColorPicker4)>(*this, lib, "ColorPicker4",SideEffects::worstDefault, "ImGui::ColorPicker4");
addExtern<DAS_BIND_FUN(ImGui::PushButtonRepeat)>(*this, lib, "PushButtonRepeat",SideEffects::worstDefault, "ImGui::PushButtonRepeat");
addExtern<DAS_BIND_FUN(ImGui::BulletTextV)>(*this, lib, "BulletTextV",SideEffects::worstDefault, "ImGui::BulletTextV");
addExtern<DAS_BIND_FUN(ImGui::GetColumnOffset)>(*this, lib, "GetColumnOffset",SideEffects::worstDefault, "ImGui::GetColumnOffset");
addExtern<bool (*)(const char *, ImGuiTreeNodeFlags, const char *, va_list),ImGui::TreeNodeExV>(*this, lib, "TreeNodeExV",SideEffects::worstDefault, "ImGui::TreeNodeExV");
addExtern<bool (*)(const void *, const char *, va_list),ImGui::TreeNodeV>(*this, lib, "TreeNodeV",SideEffects::worstDefault, "ImGui::TreeNodeV");
addExtern<DAS_BIND_FUN(ImGui::SetNextWindowContentSize)>(*this, lib, "SetNextWindowContentSize",SideEffects::worstDefault, "ImGui::SetNextWindowContentSize");
addExtern<void (*)(const char *, const ImVec2 &, ImGuiCond),ImGui::SetWindowSize>(*this, lib, "SetWindowSize",SideEffects::worstDefault, "ImGui::SetWindowSize");
addExtern<bool (*)(const char *, bool),ImGui::RadioButton>(*this, lib, "RadioButton",SideEffects::worstDefault, "ImGui::RadioButton");
addExtern<ImGuiID (*)(const char *, const char *),ImGui::GetID>(*this, lib, "GetID",SideEffects::worstDefault, "ImGui::GetID");
addExtern<DAS_BIND_FUN(ImGui::GetWindowContentRegionMax), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetWindowContentRegionMax",SideEffects::worstDefault, "ImGui::GetWindowContentRegionMax");
addExtern<bool (*)(const char *, ImGuiTreeNodeFlags),ImGui::CollapsingHeader>(*this, lib, "CollapsingHeader",SideEffects::worstDefault, "ImGui::CollapsingHeader");
addExtern<DAS_BIND_FUN(ImGui::SetScrollHereX)>(*this, lib, "SetScrollHereX",SideEffects::worstDefault, "ImGui::SetScrollHereX");
addExtern<DAS_BIND_FUN(ImGui::GetCursorPosY)>(*this, lib, "GetCursorPosY",SideEffects::worstDefault, "ImGui::GetCursorPosY");
addExtern<DAS_BIND_FUN(ImGui::PopTextWrapPos)>(*this, lib, "PopTextWrapPos",SideEffects::worstDefault, "ImGui::PopTextWrapPos");
addExtern<DAS_BIND_FUN(ImGui::GetContentRegionAvail), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetContentRegionAvail",SideEffects::worstDefault, "ImGui::GetContentRegionAvail");
addExtern<DAS_BIND_FUN(ImGui::PopItemWidth)>(*this, lib, "PopItemWidth",SideEffects::worstDefault, "ImGui::PopItemWidth");
addExtern<DAS_BIND_FUN(ImGui::IsAnyItemHovered)>(*this, lib, "IsAnyItemHovered",SideEffects::worstDefault, "ImGui::IsAnyItemHovered");
addExtern<DAS_BIND_FUN(ImGui::IsMouseDown)>(*this, lib, "IsMouseDown",SideEffects::worstDefault, "ImGui::IsMouseDown");
addExtern<DAS_BIND_FUN(ImGui::LoadIniSettingsFromDisk)>(*this, lib, "LoadIniSettingsFromDisk",SideEffects::worstDefault, "ImGui::LoadIniSettingsFromDisk");
addExtern<bool (*)(const char *, ImGuiDataType, void *, float, const void *, const void *, const char *, float),ImGui::DragScalar>(*this, lib, "DragScalar",SideEffects::worstDefault, "ImGui::DragScalar");
addExtern<bool (*)(const char *, float *, float, float, const char *, float),ImGui::SliderFloat4>(*this, lib, "SliderFloat4",SideEffects::worstDefault, "ImGui::SliderFloat4");
addExtern<DAS_BIND_FUN(ImGui::DragInt4)>(*this, lib, "DragInt4",SideEffects::worstDefault, "ImGui::DragInt4");
addExtern<DAS_BIND_FUN(ImGui::EndMenu)>(*this, lib, "EndMenu",SideEffects::worstDefault, "ImGui::EndMenu");
addExtern<bool (*)(const char *, float *, float, float, float, const char *, ImGuiSliderFlags),ImGui::DragFloat2>(*this, lib, "DragFloat2",SideEffects::worstDefault, "ImGui::DragFloat2");
addExtern<DAS_BIND_FUN(ImGui::SetTooltipV)>(*this, lib, "SetTooltipV",SideEffects::worstDefault, "ImGui::SetTooltipV");
addExtern<DAS_BIND_FUN(ImGui::StyleColorsDark)>(*this, lib, "StyleColorsDark",SideEffects::worstDefault, "ImGui::StyleColorsDark");
addExtern<DAS_BIND_FUN(ImGui::OpenPopupOnItemClick)>(*this, lib, "OpenPopupOnItemClick",SideEffects::worstDefault, "ImGui::OpenPopupOnItemClick");
addExtern<DAS_BIND_FUN(ImGui::DebugCheckVersionAndDataLayout)>(*this, lib, "DebugCheckVersionAndDataLayout",SideEffects::worstDefault, "ImGui::DebugCheckVersionAndDataLayout");
addExtern<DAS_BIND_FUN(ImGui::EndMenuBar)>(*this, lib, "EndMenuBar",SideEffects::worstDefault, "ImGui::EndMenuBar");
addExtern<DAS_BIND_FUN(ImGui::NextColumn)>(*this, lib, "NextColumn",SideEffects::worstDefault, "ImGui::NextColumn");
addExtern<DAS_BIND_FUN(ImGui::SetDragDropPayload)>(*this, lib, "SetDragDropPayload",SideEffects::worstDefault, "ImGui::SetDragDropPayload");
addExtern<DAS_BIND_FUN(ImGui::IsItemVisible)>(*this, lib, "IsItemVisible",SideEffects::worstDefault, "ImGui::IsItemVisible");
addExtern<DAS_BIND_FUN(ImGui::IsMouseDoubleClicked)>(*this, lib, "IsMouseDoubleClicked",SideEffects::worstDefault, "ImGui::IsMouseDoubleClicked");
addExtern<DAS_BIND_FUN(ImGui::SetMouseCursor)>(*this, lib, "SetMouseCursor",SideEffects::worstDefault, "ImGui::SetMouseCursor");
addExtern<DAS_BIND_FUN(ImGui::TableGetSortSpecs)>(*this, lib, "TableGetSortSpecs",SideEffects::worstDefault, "ImGui::TableGetSortSpecs");
addExtern<DAS_BIND_FUN(ImGui::ArrowButton)>(*this, lib, "ArrowButton",SideEffects::worstDefault, "ImGui::ArrowButton");
addExtern<DAS_BIND_FUN(ImGui::TreePop)>(*this, lib, "TreePop",SideEffects::worstDefault, "ImGui::TreePop");
addExtern<bool (*)(const char *, ImGuiDataType, void *, int, const void *, const void *, const char *, float),ImGui::SliderScalarN>(*this, lib, "SliderScalarN",SideEffects::worstDefault, "ImGui::SliderScalarN");
addExtern<DAS_BIND_FUN(ImGui::SetNextTreeNodeOpen)>(*this, lib, "SetNextTreeNodeOpen",SideEffects::worstDefault, "ImGui::SetNextTreeNodeOpen");
addExtern<DAS_BIND_FUN(ImGui::SliderInt3)>(*this, lib, "SliderInt3",SideEffects::worstDefault, "ImGui::SliderInt3");
addExtern<DAS_BIND_FUN(ImGui::Button)>(*this, lib, "Button",SideEffects::worstDefault, "ImGui::Button");
addExtern<bool (*)(const char *, float *, float, float, float, const char *, float),ImGui::DragFloat4>(*this, lib, "DragFloat4",SideEffects::worstDefault, "ImGui::DragFloat4");
addExtern<bool (*)(const char *, ImGuiTreeNodeFlags),ImGui::TreeNodeEx>(*this, lib, "TreeNodeEx",SideEffects::worstDefault, "ImGui::TreeNodeEx");
addExtern<DAS_BIND_FUN(ImGui::GetFrameHeight)>(*this, lib, "GetFrameHeight",SideEffects::worstDefault, "ImGui::GetFrameHeight");
addExtern<DAS_BIND_FUN(ImGui::InputFloat)>(*this, lib, "InputFloat",SideEffects::worstDefault, "ImGui::InputFloat");
addExtern<void (*)(const char *),ImGui::PushID>(*this, lib, "PushID",SideEffects::worstDefault, "ImGui::PushID");
addExtern<DAS_BIND_FUN(ImGui::SaveIniSettingsToDisk)>(*this, lib, "SaveIniSettingsToDisk",SideEffects::worstDefault, "ImGui::SaveIniSettingsToDisk");
addExtern<void (*)(bool, ImGuiCond),ImGui::SetWindowCollapsed>(*this, lib, "SetWindowCollapsed",SideEffects::worstDefault, "ImGui::SetWindowCollapsed");
addExtern<bool (*)(const char *, float *, float, float, const char *, ImGuiSliderFlags),ImGui::SliderFloat>(*this, lib, "SliderFloat",SideEffects::worstDefault, "ImGui::SliderFloat");
addExtern<void (*)(const ImVec2 &, ImGuiCond),ImGui::SetWindowSize>(*this, lib, "SetWindowSize",SideEffects::worstDefault, "ImGui::SetWindowSize");
addExtern<DAS_BIND_FUN(ImGui::SetCursorPos)>(*this, lib, "SetCursorPos",SideEffects::worstDefault, "ImGui::SetCursorPos");
addExtern<DAS_BIND_FUN(ImGui::ImageButton)>(*this, lib, "ImageButton",SideEffects::worstDefault, "ImGui::ImageButton");
addExtern<DAS_BIND_FUN(ImGui::LoadIniSettingsFromMemory)>(*this, lib, "LoadIniSettingsFromMemory",SideEffects::worstDefault, "ImGui::LoadIniSettingsFromMemory");
addExtern<DAS_BIND_FUN(ImGui::BeginCombo)>(*this, lib, "BeginCombo",SideEffects::worstDefault, "ImGui::BeginCombo");
addExtern<DAS_BIND_FUN(ImGui::GetContentRegionMax), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetContentRegionMax",SideEffects::worstDefault, "ImGui::GetContentRegionMax");
addExtern<DAS_BIND_FUN(ImGui::GetStyle), SimNode_ExtFuncCallRef>(*this, lib, "GetStyle",SideEffects::worstDefault, "ImGui::GetStyle");
addExtern<DAS_BIND_FUN(ImGui::BeginTabItem)>(*this, lib, "BeginTabItem",SideEffects::worstDefault, "ImGui::BeginTabItem");
addExtern<DAS_BIND_FUN(ImGui::BeginChildFrame)>(*this, lib, "BeginChildFrame",SideEffects::worstDefault, "ImGui::BeginChildFrame");
addExtern<DAS_BIND_FUN(ImGui::TableSetupColumn)>(*this, lib, "TableSetupColumn",SideEffects::worstDefault, "ImGui::TableSetupColumn");
addExtern<DAS_BIND_FUN(ImGui::ProgressBar)>(*this, lib, "ProgressBar",SideEffects::worstDefault, "ImGui::ProgressBar");
addExtern<void (*)(const ImVec2 &, ImGuiCond),ImGui::SetWindowPos>(*this, lib, "SetWindowPos",SideEffects::worstDefault, "ImGui::SetWindowPos");
addExtern<DAS_BIND_FUN(ImGui::TextWrappedV)>(*this, lib, "TextWrappedV",SideEffects::worstDefault, "ImGui::TextWrappedV");
addExtern<DAS_BIND_FUN(ImGui::TableSetBgColor)>(*this, lib, "TableSetBgColor",SideEffects::worstDefault, "ImGui::TableSetBgColor");
addExtern<void (*)(ImGuiCol, ImU32),ImGui::PushStyleColor>(*this, lib, "PushStyleColor",SideEffects::worstDefault, "ImGui::PushStyleColor");
addExtern<bool (*)(const char *, const ImVec2 &),ImGui::ListBoxHeader>(*this, lib, "ListBoxHeader",SideEffects::worstDefault, "ImGui::ListBoxHeader");
addExtern<DAS_BIND_FUN(ImGui::CalcListClipping)>(*this, lib, "CalcListClipping",SideEffects::worstDefault, "ImGui::CalcListClipping");
addExtern<DAS_BIND_FUN(ImGui::ColorConvertHSVtoRGB)>(*this, lib, "ColorConvertHSVtoRGB",SideEffects::worstDefault, "ImGui::ColorConvertHSVtoRGB");
addExtern<bool (*)(const char *, float *, float, float, float, const char *, ImGuiSliderFlags),ImGui::DragFloat4>(*this, lib, "DragFloat4",SideEffects::worstDefault, "ImGui::DragFloat4");
addExtern<DAS_BIND_FUN(ImGui::TableGetRowIndex)>(*this, lib, "TableGetRowIndex",SideEffects::worstDefault, "ImGui::TableGetRowIndex");
addExtern<DAS_BIND_FUN(ImGui::BeginDragDropTarget)>(*this, lib, "BeginDragDropTarget",SideEffects::worstDefault, "ImGui::BeginDragDropTarget");
addExtern<void (*)(),ImGui::SetWindowFocus>(*this, lib, "SetWindowFocus",SideEffects::worstDefault, "ImGui::SetWindowFocus");
addExtern<DAS_BIND_FUN(ImGui::ShowUserGuide)>(*this, lib, "ShowUserGuide",SideEffects::worstDefault, "ImGui::ShowUserGuide");
addExtern<DAS_BIND_FUN(ImGui::SaveIniSettingsToMemory)>(*this, lib, "SaveIniSettingsToMemory",SideEffects::worstDefault, "ImGui::SaveIniSettingsToMemory");
addExtern<DAS_BIND_FUN(ImGui::ShowMetricsWindow)>(*this, lib, "ShowMetricsWindow",SideEffects::worstDefault, "ImGui::ShowMetricsWindow");
addExtern<DAS_BIND_FUN(ImGui::GetFontSize)>(*this, lib, "GetFontSize",SideEffects::worstDefault, "ImGui::GetFontSize");
addExtern<DAS_BIND_FUN(ImGui::BeginTable)>(*this, lib, "BeginTable",SideEffects::worstDefault, "ImGui::BeginTable");
addExtern<DAS_BIND_FUN(ImGui::InputFloat2)>(*this, lib, "InputFloat2",SideEffects::worstDefault, "ImGui::InputFloat2");
addExtern<DAS_BIND_FUN(ImGui::GetWindowWidth)>(*this, lib, "GetWindowWidth",SideEffects::worstDefault, "ImGui::GetWindowWidth");
addExtern<DAS_BIND_FUN(ImGui::GetCurrentContext)>(*this, lib, "GetCurrentContext",SideEffects::worstDefault, "ImGui::GetCurrentContext");
addExtern<bool (*)(const char *, ImGuiDataType, void *, const void *, const void *, const char *, ImGuiSliderFlags),ImGui::SliderScalar>(*this, lib, "SliderScalar",SideEffects::worstDefault, "ImGui::SliderScalar");
addExtern<bool (*)(const char *, const ImVec2 &, bool, ImGuiWindowFlags),ImGui::BeginChild>(*this, lib, "BeginChild",SideEffects::worstDefault, "ImGui::BeginChild");
addExtern<DAS_BIND_FUN(ImGui::Begin)>(*this, lib, "Begin",SideEffects::worstDefault, "ImGui::Begin");
addExtern<DAS_BIND_FUN(ImGui::GetTextLineHeight)>(*this, lib, "GetTextLineHeight",SideEffects::worstDefault, "ImGui::GetTextLineHeight");
addExtern<void (*)(const char *, float, const char *),ImGui::Value>(*this, lib, "Value",SideEffects::worstDefault, "ImGui::Value");
addExtern<DAS_BIND_FUN(ImGui::GetWindowContentRegionMin), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetWindowContentRegionMin",SideEffects::worstDefault, "ImGui::GetWindowContentRegionMin");
addExtern<DAS_BIND_FUN(ImGui::GetTextLineHeightWithSpacing)>(*this, lib, "GetTextLineHeightWithSpacing",SideEffects::worstDefault, "ImGui::GetTextLineHeightWithSpacing");
addExtern<DAS_BIND_FUN(ImGui::IsWindowAppearing)>(*this, lib, "IsWindowAppearing",SideEffects::worstDefault, "ImGui::IsWindowAppearing");
addExtern<DAS_BIND_FUN(ImGui::SetNextWindowBgAlpha)>(*this, lib, "SetNextWindowBgAlpha",SideEffects::worstDefault, "ImGui::SetNextWindowBgAlpha");
addExtern<DAS_BIND_FUN(ImGui::GetScrollY)>(*this, lib, "GetScrollY",SideEffects::worstDefault, "ImGui::GetScrollY");
addExtern<DAS_BIND_FUN(ImGui::PopAllowKeyboardFocus)>(*this, lib, "PopAllowKeyboardFocus",SideEffects::worstDefault, "ImGui::PopAllowKeyboardFocus");
addExtern<DAS_BIND_FUN(ImGui::Image)>(*this, lib, "Image",SideEffects::worstDefault, "ImGui::Image");
addExtern<DAS_BIND_FUN(ImGui::LogToClipboard)>(*this, lib, "LogToClipboard",SideEffects::worstDefault, "ImGui::LogToClipboard");
addExtern<DAS_BIND_FUN(ImGui::LogFinish)>(*this, lib, "LogFinish",SideEffects::worstDefault, "ImGui::LogFinish");
addExtern<DAS_BIND_FUN(ImGui::SetItemAllowOverlap)>(*this, lib, "SetItemAllowOverlap",SideEffects::worstDefault, "ImGui::SetItemAllowOverlap");
addExtern<DAS_BIND_FUN(ImGui::GetIO), SimNode_ExtFuncCallRef>(*this, lib, "GetIO",SideEffects::worstDefault, "ImGui::GetIO");
addExtern<bool (*)(const ImVec2 &, const ImVec2 &),ImGui::IsRectVisible>(*this, lib, "IsRectVisible",SideEffects::worstDefault, "ImGui::IsRectVisible");
addExtern<DAS_BIND_FUN(ImGui::TextDisabledV)>(*this, lib, "TextDisabledV",SideEffects::worstDefault, "ImGui::TextDisabledV");
addExtern<DAS_BIND_FUN(ImGui::DragFloatRange2)>(*this, lib, "DragFloatRange2",SideEffects::worstDefault, "ImGui::DragFloatRange2");
addExtern<DAS_BIND_FUN(ImGui::GetColumnWidth)>(*this, lib, "GetColumnWidth",SideEffects::worstDefault, "ImGui::GetColumnWidth");
addExtern<DAS_BIND_FUN(ImGui::SetNextWindowCollapsed)>(*this, lib, "SetNextWindowCollapsed",SideEffects::worstDefault, "ImGui::SetNextWindowCollapsed");
addExtern<DAS_BIND_FUN(ImGui::Indent)>(*this, lib, "Indent",SideEffects::worstDefault, "ImGui::Indent");
addExtern<DAS_BIND_FUN(ImGui::ColorConvertFloat4ToU32)>(*this, lib, "ColorConvertFloat4ToU32",SideEffects::worstDefault, "ImGui::ColorConvertFloat4ToU32");
addExtern<DAS_BIND_FUN(ImGui::SetCurrentContext)>(*this, lib, "SetCurrentContext",SideEffects::worstDefault, "ImGui::SetCurrentContext");
addExtern<DAS_BIND_FUN(ImGui::IsMouseHoveringRect)>(*this, lib, "IsMouseHoveringRect",SideEffects::worstDefault, "ImGui::IsMouseHoveringRect");
addExtern<DAS_BIND_FUN(ImGui::GetItemRectSize), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetItemRectSize",SideEffects::worstDefault, "ImGui::GetItemRectSize");
addExtern<DAS_BIND_FUN(ImGui::InputDouble)>(*this, lib, "InputDouble",SideEffects::worstDefault, "ImGui::InputDouble");
addExtern<DAS_BIND_FUN(ImGui::GetMousePosOnOpeningCurrentPopup), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetMousePosOnOpeningCurrentPopup",SideEffects::worstDefault, "ImGui::GetMousePosOnOpeningCurrentPopup");
addExtern<DAS_BIND_FUN(ImGui::PushFont)>(*this, lib, "PushFont",SideEffects::worstDefault, "ImGui::PushFont");
addExtern<DAS_BIND_FUN(ImGui::SetNextWindowSizeConstraints)>(*this, lib, "SetNextWindowSizeConstraints",SideEffects::worstDefault, "ImGui::SetNextWindowSizeConstraints");
addExtern<DAS_BIND_FUN(ImGui::Separator)>(*this, lib, "Separator",SideEffects::worstDefault, "ImGui::Separator");
addExtern<bool (*)(const char *, ImGuiDataType, void *, int, float, const void *, const void *, const char *, ImGuiSliderFlags),ImGui::DragScalarN>(*this, lib, "DragScalarN",SideEffects::worstDefault, "ImGui::DragScalarN");
addExtern<DAS_BIND_FUN(ImGui::SetCursorPosX)>(*this, lib, "SetCursorPosX",SideEffects::worstDefault, "ImGui::SetCursorPosX");
addExtern<void (*)(const char *, float (*)(void *, int), void *, int, int, const char *, float, float, ImVec2),ImGui::PlotLines>(*this, lib, "PlotLines",SideEffects::worstDefault, "ImGui::PlotLines");
addExtern<DAS_BIND_FUN(ImGui::IsWindowHovered)>(*this, lib, "IsWindowHovered",SideEffects::worstDefault, "ImGui::IsWindowHovered");
addExtern<DAS_BIND_FUN(ImGui::VSliderFloat)>(*this, lib, "VSliderFloat",SideEffects::worstDefault, "ImGui::VSliderFloat");
addExtern<DAS_BIND_FUN(ImGui::ColorEdit3)>(*this, lib, "ColorEdit3",SideEffects::worstDefault, "ImGui::ColorEdit3");
addExtern<DAS_BIND_FUN(ImGui::SetClipboardText)>(*this, lib, "SetClipboardText",SideEffects::worstDefault, "ImGui::SetClipboardText");
addExtern<DAS_BIND_FUN(ImGui::IsWindowFocused)>(*this, lib, "IsWindowFocused",SideEffects::worstDefault, "ImGui::IsWindowFocused");
addExtern<DAS_BIND_FUN(ImGui::IsAnyItemFocused)>(*this, lib, "IsAnyItemFocused",SideEffects::worstDefault, "ImGui::IsAnyItemFocused");
addExtern<void (*)(const char *, bool, ImGuiCond),ImGui::SetWindowCollapsed>(*this, lib, "SetWindowCollapsed",SideEffects::worstDefault, "ImGui::SetWindowCollapsed");
addExtern<bool (*)(const char *, int *, const char *, int),ImGui::Combo>(*this, lib, "Combo",SideEffects::worstDefault, "ImGui::Combo");
addExtern<bool (*)(const char *, float *, float, float, float, const char *, ImGuiSliderFlags),ImGui::DragFloat>(*this, lib, "DragFloat",SideEffects::worstDefault, "ImGui::DragFloat");
addExtern<DAS_BIND_FUN(ImGui::AcceptDragDropPayload)>(*this, lib, "AcceptDragDropPayload",SideEffects::worstDefault, "ImGui::AcceptDragDropPayload");
addExtern<void (*)(const char *),ImGui::TreePush>(*this, lib, "TreePush",SideEffects::worstDefault, "ImGui::TreePush");
addExtern<DAS_BIND_FUN(ImGui::TextUnformatted)>(*this, lib, "TextUnformatted",SideEffects::worstDefault, "ImGui::TextUnformatted");
addExtern<DAS_BIND_FUN(ImGui::DragIntRange2)>(*this, lib, "DragIntRange2",SideEffects::worstDefault, "ImGui::DragIntRange2");
addExtern<DAS_BIND_FUN(ImGui::GetStateStorage)>(*this, lib, "GetStateStorage",SideEffects::worstDefault, "ImGui::GetStateStorage");
addExtern<DAS_BIND_FUN(ImGui::Columns)>(*this, lib, "Columns",SideEffects::worstDefault, "ImGui::Columns");
addExtern<bool (*)(const char *, int *, const char *const *, int, int),ImGui::ListBox>(*this, lib, "ListBox",SideEffects::worstDefault, "ImGui::ListBox");
addExtern<bool (*)(const char *),ImGui::TreeNode>(*this, lib, "TreeNode",SideEffects::worstDefault, "ImGui::TreeNode");
addExtern<DAS_BIND_FUN(ImGui::EndCombo)>(*this, lib, "EndCombo",SideEffects::worstDefault, "ImGui::EndCombo");
addExtern<ImGuiID (*)(const void *),ImGui::GetID>(*this, lib, "GetID",SideEffects::worstDefault, "ImGui::GetID");
addExtern<bool (*)(const char *, float *, float, float, const char *, ImGuiSliderFlags),ImGui::SliderFloat4>(*this, lib, "SliderFloat4",SideEffects::worstDefault, "ImGui::SliderFloat4");
addExtern<DAS_BIND_FUN(ImGui::EndTabItem)>(*this, lib, "EndTabItem",SideEffects::worstDefault, "ImGui::EndTabItem");
addExtern<DAS_BIND_FUN(ImGui::IsItemDeactivated)>(*this, lib, "IsItemDeactivated",SideEffects::worstDefault, "ImGui::IsItemDeactivated");
addExtern<DAS_BIND_FUN(ImGui::SetNextWindowSize)>(*this, lib, "SetNextWindowSize",SideEffects::worstDefault, "ImGui::SetNextWindowSize");
addExtern<DAS_BIND_FUN(ImGui::GetCursorPos), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetCursorPos",SideEffects::worstDefault, "ImGui::GetCursorPos");
addExtern<DAS_BIND_FUN(ImGui::InputInt3)>(*this, lib, "InputInt3",SideEffects::worstDefault, "ImGui::InputInt3");
addExtern<DAS_BIND_FUN(ImGui::TableNextColumn)>(*this, lib, "TableNextColumn",SideEffects::worstDefault, "ImGui::TableNextColumn");
addExtern<DAS_BIND_FUN(ImGui::TableGetColumnIndex)>(*this, lib, "TableGetColumnIndex",SideEffects::worstDefault, "ImGui::TableGetColumnIndex");
addExtern<DAS_BIND_FUN(ImGui::PopStyleVar)>(*this, lib, "PopStyleVar",SideEffects::worstDefault, "ImGui::PopStyleVar");
addExtern<DAS_BIND_FUN(ImGui::EndMainMenuBar)>(*this, lib, "EndMainMenuBar",SideEffects::worstDefault, "ImGui::EndMainMenuBar");
addExtern<DAS_BIND_FUN(ImGui::BeginPopupContextItem)>(*this, lib, "BeginPopupContextItem",SideEffects::worstDefault, "ImGui::BeginPopupContextItem");
addExtern<DAS_BIND_FUN(ImGui::TextColoredV)>(*this, lib, "TextColoredV",SideEffects::worstDefault, "ImGui::TextColoredV");
addExtern<DAS_BIND_FUN(ImGui::PopClipRect)>(*this, lib, "PopClipRect",SideEffects::worstDefault, "ImGui::PopClipRect");
addExtern<DAS_BIND_FUN(ImGui::IsItemEdited)>(*this, lib, "IsItemEdited",SideEffects::worstDefault, "ImGui::IsItemEdited");
addExtern<DAS_BIND_FUN(ImGui::EndTabBar)>(*this, lib, "EndTabBar",SideEffects::worstDefault, "ImGui::EndTabBar");
addExtern<DAS_BIND_FUN(ImGui::GetItemRectMax), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetItemRectMax",SideEffects::worstDefault, "ImGui::GetItemRectMax");
addExtern<DAS_BIND_FUN(ImGui::IsMouseDragging)>(*this, lib, "IsMouseDragging",SideEffects::worstDefault, "ImGui::IsMouseDragging");
addExtern<DAS_BIND_FUN(ImGui::SetScrollHere)>(*this, lib, "SetScrollHere",SideEffects::worstDefault, "ImGui::SetScrollHere");
addExtern<void (*)(const char *, const ImVec2 &, ImGuiCond),ImGui::SetWindowPos>(*this, lib, "SetWindowPos",SideEffects::worstDefault, "ImGui::SetWindowPos");
addExtern<bool (*)(const char *, int *, const char *const *, int, int),ImGui::Combo>(*this, lib, "Combo",SideEffects::worstDefault, "ImGui::Combo");
addExtern<DAS_BIND_FUN(ImGui::GetCursorScreenPos), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetCursorScreenPos",SideEffects::worstDefault, "ImGui::GetCursorScreenPos");
addExtern<DAS_BIND_FUN(ImGui::MemFree)>(*this, lib, "MemFree",SideEffects::worstDefault, "ImGui::MemFree");
addExtern<bool (*)(const char *, float *, float, float, const char *, float),ImGui::SliderFloat3>(*this, lib, "SliderFloat3",SideEffects::worstDefault, "ImGui::SliderFloat3");
addExtern<DAS_BIND_FUN(ImGui::Bullet)>(*this, lib, "Bullet",SideEffects::worstDefault, "ImGui::Bullet");
addExtern<DAS_BIND_FUN(ImGui::InputScalarN)>(*this, lib, "InputScalarN",SideEffects::worstDefault, "ImGui::InputScalarN");
addExtern<DAS_BIND_FUN(ImGui::ResetMouseDragDelta)>(*this, lib, "ResetMouseDragDelta",SideEffects::worstDefault, "ImGui::ResetMouseDragDelta");
addExtern<DAS_BIND_FUN(ImGui::GetFrameHeightWithSpacing)>(*this, lib, "GetFrameHeightWithSpacing",SideEffects::worstDefault, "ImGui::GetFrameHeightWithSpacing");
addExtern<void (*)(const char *, const char *),ImGui::PushID>(*this, lib, "PushID",SideEffects::worstDefault, "ImGui::PushID");
addExtern<bool (*)(const char *, int *, bool (*)(void *, int, const char **), void *, int, int),ImGui::ListBox>(*this, lib, "ListBox",SideEffects::worstDefault, "ImGui::ListBox");
addExtern<bool (*)(const char *, float *, float, float, const char *, float),ImGui::SliderFloat>(*this, lib, "SliderFloat",SideEffects::worstDefault, "ImGui::SliderFloat");
addExtern<DAS_BIND_FUN(ImGui::EndChild)>(*this, lib, "EndChild",SideEffects::worstDefault, "ImGui::EndChild");
addExtern<bool (*)(const char *, ImGuiPopupFlags),ImGui::BeginPopupContextWindow>(*this, lib, "BeginPopupContextWindow",SideEffects::worstDefault, "ImGui::BeginPopupContextWindow");
addExtern<DAS_BIND_FUN(ImGui::TableGetColumnCount)>(*this, lib, "TableGetColumnCount",SideEffects::worstDefault, "ImGui::TableGetColumnCount");
addExtern<void (*)(const void *),ImGui::PushID>(*this, lib, "PushID",SideEffects::worstDefault, "ImGui::PushID");
addExtern<DAS_BIND_FUN(ImGui::IsMousePosValid)>(*this, lib, "IsMousePosValid",SideEffects::worstDefault, "ImGui::IsMousePosValid");
addExtern<DAS_BIND_FUN(ImGui::PushItemWidth)>(*this, lib, "PushItemWidth",SideEffects::worstDefault, "ImGui::PushItemWidth");
addExtern<DAS_BIND_FUN(ImGui::GetFontTexUvWhitePixel), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetFontTexUvWhitePixel",SideEffects::worstDefault, "ImGui::GetFontTexUvWhitePixel");
addExtern<DAS_BIND_FUN(ImGui::GetStyleColorVec4), SimNode_ExtFuncCallRef>(*this, lib, "GetStyleColorVec4",SideEffects::worstDefault, "ImGui::GetStyleColorVec4");
addExtern<void (*)(const char *, bool),ImGui::Value>(*this, lib, "Value",SideEffects::worstDefault, "ImGui::Value");
addExtern<DAS_BIND_FUN(ImGui::SetAllocatorFunctions)>(*this, lib, "SetAllocatorFunctions",SideEffects::worstDefault, "ImGui::SetAllocatorFunctions");
addExtern<void (*)(const char *, float (*)(void *, int), void *, int, int, const char *, float, float, ImVec2),ImGui::PlotHistogram>(*this, lib, "PlotHistogram",SideEffects::worstDefault, "ImGui::PlotHistogram");
addExtern<DAS_BIND_FUN(ImGui::StyleColorsClassic)>(*this, lib, "StyleColorsClassic",SideEffects::worstDefault, "ImGui::StyleColorsClassic");
addExtern<DAS_BIND_FUN(ImGui::SetTabItemClosed)>(*this, lib, "SetTabItemClosed",SideEffects::worstDefault, "ImGui::SetTabItemClosed");
addExtern<DAS_BIND_FUN(ImGui::GetColumnsCount)>(*this, lib, "GetColumnsCount",SideEffects::worstDefault, "ImGui::GetColumnsCount");
addExtern<ImGuiID (*)(const char *),ImGui::GetID>(*this, lib, "GetID",SideEffects::worstDefault, "ImGui::GetID");
addExtern<DAS_BIND_FUN(ImGui::AlignTextToFramePadding)>(*this, lib, "AlignTextToFramePadding",SideEffects::worstDefault, "ImGui::AlignTextToFramePadding");
addExtern<DAS_BIND_FUN(ImGui::IsItemActive)>(*this, lib, "IsItemActive",SideEffects::worstDefault, "ImGui::IsItemActive");
addExtern<DAS_BIND_FUN(ImGui::EndGroup)>(*this, lib, "EndGroup",SideEffects::worstDefault, "ImGui::EndGroup");
addExtern<DAS_BIND_FUN(ImGui::CloseCurrentPopup)>(*this, lib, "CloseCurrentPopup",SideEffects::worstDefault, "ImGui::CloseCurrentPopup");
addExtern<DAS_BIND_FUN(ImGui::TableNextRow)>(*this, lib, "TableNextRow",SideEffects::worstDefault, "ImGui::TableNextRow");
addExtern<bool (*)(ImGuiID, const ImVec2 &, bool, ImGuiWindowFlags),ImGui::BeginChild>(*this, lib, "BeginChild",SideEffects::worstDefault, "ImGui::BeginChild");
addExtern<DAS_BIND_FUN(ImGui::GetFont)>(*this, lib, "GetFont",SideEffects::worstDefault, "ImGui::GetFont");
addExtern<bool (*)(const char *, bool, ImGuiSelectableFlags, const ImVec2 &),ImGui::Selectable>(*this, lib, "Selectable",SideEffects::worstDefault, "ImGui::Selectable");
addExtern<DAS_BIND_FUN(ImGui::GetDragDropPayload)>(*this, lib, "GetDragDropPayload",SideEffects::worstDefault, "ImGui::GetDragDropPayload");
addExtern<DAS_BIND_FUN(ImGui::SetScrollY)>(*this, lib, "SetScrollY",SideEffects::worstDefault, "ImGui::SetScrollY");
addExtern<DAS_BIND_FUN(ImGui::ColorEdit4)>(*this, lib, "ColorEdit4",SideEffects::worstDefault, "ImGui::ColorEdit4");
addExtern<DAS_BIND_FUN(ImGui::NewLine)>(*this, lib, "NewLine",SideEffects::worstDefault, "ImGui::NewLine");
addExtern<DAS_BIND_FUN(ImGui::BeginPopupContextVoid)>(*this, lib, "BeginPopupContextVoid",SideEffects::worstDefault, "ImGui::BeginPopupContextVoid");
addExtern<DAS_BIND_FUN(ImGui::GetMouseDragDelta), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetMouseDragDelta",SideEffects::worstDefault, "ImGui::GetMouseDragDelta");
addExtern<DAS_BIND_FUN(ImGui::End)>(*this, lib, "End",SideEffects::worstDefault, "ImGui::End");
addExtern<DAS_BIND_FUN(ImGui::VSliderInt)>(*this, lib, "VSliderInt",SideEffects::worstDefault, "ImGui::VSliderInt");
addExtern<DAS_BIND_FUN(ImGui::InputFloat4)>(*this, lib, "InputFloat4",SideEffects::worstDefault, "ImGui::InputFloat4");
addExtern<DAS_BIND_FUN(ImGui::InputInt)>(*this, lib, "InputInt",SideEffects::worstDefault, "ImGui::InputInt");
addExtern<DAS_BIND_FUN(ImGui::GetOverlayDrawList)>(*this, lib, "GetOverlayDrawList",SideEffects::worstDefault, "ImGui::GetOverlayDrawList");
addExtern<DAS_BIND_FUN(ImGui::ShowDemoWindow)>(*this, lib, "ShowDemoWindow",SideEffects::worstDefault, "ImGui::ShowDemoWindow");
addExtern<DAS_BIND_FUN(ImGui::GetWindowDrawList)>(*this, lib, "GetWindowDrawList",SideEffects::worstDefault, "ImGui::GetWindowDrawList");
addExtern<DAS_BIND_FUN(ImGui::BeginTooltip)>(*this, lib, "BeginTooltip",SideEffects::worstDefault, "ImGui::BeginTooltip");
addExtern<ImU32 (*)(ImU32),ImGui::GetColorU32>(*this, lib, "GetColorU32",SideEffects::worstDefault, "ImGui::GetColorU32");
addExtern<DAS_BIND_FUN(ImGui::GetWindowPos), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetWindowPos",SideEffects::worstDefault, "ImGui::GetWindowPos");
addExtern<DAS_BIND_FUN(ImGui::PopButtonRepeat)>(*this, lib, "PopButtonRepeat",SideEffects::worstDefault, "ImGui::PopButtonRepeat");
addExtern<DAS_BIND_FUN(ImGui::SliderInt)>(*this, lib, "SliderInt",SideEffects::worstDefault, "ImGui::SliderInt");
addExtern<DAS_BIND_FUN(ImGui::EndDragDropSource)>(*this, lib, "EndDragDropSource",SideEffects::worstDefault, "ImGui::EndDragDropSource");
addExtern<bool (*)(const char *, float *, float, float, const char *, ImGuiSliderFlags),ImGui::SliderFloat2>(*this, lib, "SliderFloat2",SideEffects::worstDefault, "ImGui::SliderFloat2");
addExtern<DAS_BIND_FUN(ImGui::TableHeadersRow)>(*this, lib, "TableHeadersRow",SideEffects::worstDefault, "ImGui::TableHeadersRow");
addExtern<DAS_BIND_FUN(ImGui::PushClipRect)>(*this, lib, "PushClipRect",SideEffects::worstDefault, "ImGui::PushClipRect");
addExtern<DAS_BIND_FUN(ImGui::DragInt3)>(*this, lib, "DragInt3",SideEffects::worstDefault, "ImGui::DragInt3");
addExtern<DAS_BIND_FUN(ImGui::IsItemFocused)>(*this, lib, "IsItemFocused",SideEffects::worstDefault, "ImGui::IsItemFocused");
addExtern<bool (*)(const char *, bool *, ImGuiSelectableFlags, const ImVec2 &),ImGui::Selectable>(*this, lib, "Selectable",SideEffects::worstDefault, "ImGui::Selectable");
addExtern<DAS_BIND_FUN(ImGui::GetVersion)>(*this, lib, "GetVersion",SideEffects::worstDefault, "ImGui::GetVersion");
addExtern<DAS_BIND_FUN(ImGui::IsMouseClicked)>(*this, lib, "IsMouseClicked",SideEffects::worstDefault, "ImGui::IsMouseClicked");
addExtern<DAS_BIND_FUN(ImGui::GetMousePos), SimNode_ExtFuncCallAndCopyOrMove>(*this, lib, "GetMousePos",SideEffects::worstDefault, "ImGui::GetMousePos");
addExtern<DAS_BIND_FUN(ImGui::DragInt2)>(*this, lib, "DragInt2",SideEffects::worstDefault, "ImGui::DragInt2");
addExtern<DAS_BIND_FUN(ImGui::SetCursorPosY)>(*this, lib, "SetCursorPosY",SideEffects::worstDefault, "ImGui::SetCursorPosY");
addExtern<DAS_BIND_FUN(ImGui::StyleColorsLight)>(*this, lib, "StyleColorsLight",SideEffects::worstDefault, "ImGui::StyleColorsLight");
addExtern<DAS_BIND_FUN(ImGui::IsPopupOpen)>(*this, lib, "IsPopupOpen",SideEffects::worstDefault, "ImGui::IsPopupOpen");
addExtern<DAS_BIND_FUN(ImGui::GetBackgroundDrawList)>(*this, lib, "GetBackgroundDrawList",SideEffects::worstDefault, "ImGui::GetBackgroundDrawList");
addExtern<DAS_BIND_FUN(ImGui::IsKeyReleased)>(*this, lib, "IsKeyReleased",SideEffects::worstDefault, "ImGui::IsKeyReleased");
addExtern<bool (*)(const char *, float *, float, float, const char *, ImGuiSliderFlags),ImGui::SliderFloat3>(*this, lib, "SliderFloat3",SideEffects::worstDefault, "ImGui::SliderFloat3");
addExtern<DAS_BIND_FUN(ImGui::PopID)>(*this, lib, "PopID",SideEffects::worstDefault, "ImGui::PopID");
addExtern<DAS_BIND_FUN(ImGui::IsItemToggledOpen)>(*this, lib, "IsItemToggledOpen",SideEffects::worstDefault, "ImGui::IsItemToggledOpen");
addExtern<DAS_BIND_FUN(ImGui::InputInt2)>(*this, lib, "InputInt2",SideEffects::worstDefault, "ImGui::InputInt2");
addExtern<DAS_BIND_FUN(ImGui::TableGetColumnName)>(*this, lib, "TableGetColumnName",SideEffects::worstDefault, "ImGui::TableGetColumnName");
